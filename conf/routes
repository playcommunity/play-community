# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Board
GET     /boards                                   controllers.BoardController.index(path: String, resType: String ?= "", status: String ?= "0", page: Int ?= 1)
GET     /board/all                                controllers.BoardController.viewAllBoards()
GET     /board/view                               controllers.ResourceController.view(_id: String)
GET     /board/recordTraffic                      controllers.BoardController.recordTraffic(boardPath: String)
GET     /board/followBoard                        controllers.BoardController.followBoard(boardPath: String, isFollow: Boolean)
GET     /board/getRelateStatus                    controllers.BoardController.getRelateStatus(boardPath: String)
GET     /board/tree                               controllers.BoardController.categoryTree(defaultSelected: String, callback: String)
GET     /board/tree/json                          controllers.BoardController.categoryTreeJson()
GET     /board/path/name                          controllers.BoardController.getPathName(path: String)

# Cases
GET     /leaders                                  controllers.CircleController.leaders()
GET     /leader/crawl                             controllers.CircleController.crawlLeader(_id: String)
POST    /leader/add                               controllers.CircleController.doAddLeader
POST    /leader/vote                              controllers.CircleController.doVoteLeader

GET     /corporations                             controllers.CircleController.corporations(sortBy: String ?= "vote")
POST    /corporation/add                          controllers.CircleController.doAddCorporation
POST    /corporation/vote                         controllers.CircleController.doVoteCorporation

# Resource
GET     /articles                                 controllers.ResourceController.index(category: String ?= "/", resType: String = "article", status: String ?= "0", page: Int ?= 1)
GET     /article/add                              controllers.ResourceController.add(resType: String = "article")
GET     /article/edit                             controllers.ResourceController.edit(_id: String)
GET     /article/view                             controllers.ResourceController.view(_id: String)

GET     /sitemap                                  controllers.ResourceController.sitemap
GET     /sitemap.txt                              controllers.ResourceController.sitemap

GET     /qas                                      controllers.ResourceController.index(category: String ?= "/", resType: String = "qa", status: String ?= "0", page: Int ?= 1)
GET     /qa/add                                   controllers.ResourceController.add(resType: String = "qa")
GET     /qa/edit                                  controllers.ResourceController.edit(_id: String)
GET     /qa/view                                  controllers.ResourceController.view(_id: String)


POST    /resource/add                             controllers.ResourceController.doAdd()
POST    /resource/collect                         controllers.ResourceController.doCollect()
POST    /resource/remove                          controllers.ResourceController.doRemove
POST    /resource/push                            controllers.ResourceController.doPush

# Doc
GET     /docs                                     controllers.DocController.index
GET     /doc/view                                 controllers.DocController.viewDoc(_id: String)
GET     /doc/catalog                              controllers.DocController.viewCatalog(_id: String)


# Exam
GET     /exams                                    controllers.ResourceController.index(category: String ?= "/", resType: String = "exam", status: String ?= "0", page: Int ?= 1)
GET     /exam/view                                controllers.ResourceController.view(_id: String)
GET     /exam/add                                 controllers.ExamController.add
GET     /exam/edit                                controllers.ExamController.edit(_id: String)
POST    /exam/edit                                controllers.ExamController.doEdit
POST    /exam/submit                              controllers.ExamController.doSubmitAnswer


# Tweet
GET     /tweets                                   controllers.TweetController.index(nav: String ?= "0", page: Int ?= 1)
GET     /tweet/json                               controllers.TweetController.getLatestAndHot(count: Int ?= 15)
POST    /tweet/add                                controllers.TweetController.doAdd
GET     /tweet/view                               controllers.TweetController.view(_id: String)
GET     /tweet/remove                             controllers.TweetController.doRemove(_id: String)

# Dict
GET     /dict                                     controllers.DictController.index
GET     /dict/add                                 controllers.DictController.add(_id: String ?= "")
POST    /dict/add                                 controllers.DictController.doAdd
GET     /dict/edit                                controllers.DictController.edit(_id: String ?= "")
POST    /dict/edit                                controllers.DictController.doEdit
GET     /dict/pass                                controllers.DictController.pass(_id: String ?= "")
GET     /dict/remove                              controllers.DictController.remove(_id: String ?= "")
GET     /dict/tag/:tag                            controllers.DictController.viewTag(tag: String)
GET     /dict/:_id                                controllers.DictController.query(_id: String)

# Common
POST    /resource/vote                            controllers.CommonController.doVote
POST    /resource/reply/vote                      controllers.CommonController.doVoteReply
POST    /resource/reply                           controllers.CommonController.doReply
GET     /resource/reply/edit                      controllers.CommonController.editReply(aid: String, rid: String)
POST    /resource/reply/edit                      controllers.CommonController.doEditReply
POST    /resource/reply/delete                    controllers.CommonController.doRemoveReply
POST    /resource/status                          controllers.CommonController.doSetStatus

+ nocsrf
GET     /socket.io/                              play.engineio.EngineIOController.endpoint(transport)
+ nocsrf
POST    /socket.io/                              play.engineio.EngineIOController.endpoint(transport)

# Application
GET     /                                         controllers.Application.index(resType: String ?= "", status: String ?= "0", page: Int ?= 1)
GET     /icons                                    controllers.Application.icons
GET     /search                                   controllers.Application.search(q: String ?= "", plate: String ?= "", page: Int ?= 1)
GET     /login                                    controllers.Application.login(login: Option[String])
POST    /login                                    controllers.Application.doLogin
GET     /weixinLogin                              controllers.Application.weixinLogin
GET     /weixinAppCode                            controllers.Application.renderAppCodeImage(uuid: String)
GET     /waitWeiXinScan                           controllers.Application.waitWeiXinScanResult(uuid: String)
GET     /register                                 controllers.Application.register
POST    /register                                 controllers.Application.doRegister

GET     /resetPassword                            controllers.Application.resetPassword
POST    /resetPassword                            controllers.Application.doResetPassword
GET     /resetVerify                              controllers.Application.verifyResetPassword(p:String)

GET     /logout                                   controllers.Application.logout
GET     /404                                      controllers.Application.notFound
GET     /message                                  controllers.Application.message(title: String, message: String)
GET     /verifyCode                               controllers.Application.verifyCode
GET     /autoRegister                             controllers.Application.autoRegister
POST    /activate                                 controllers.Application.doActive
POST    /activate/email                           controllers.Application.doSendActiveMail

# FIXME
# GET     /temp/indexBook                           controllers.Application.indexBook

# User
GET     /user                                     controllers.UserController.index
GET     /user/home                                controllers.UserController.home(uid: Option[String])
GET     /user/message                             controllers.UserController.message
POST    /user/message/remove                      controllers.UserController.removeMessage
GET     /user/message/count                       controllers.UserController.messageCount()
GET     /user/message/read                        controllers.UserController.readMessage()
POST    /user/message/clear                       controllers.UserController.clearMessage
GET     /user/activate                            controllers.UserController.activate
GET     /user/setting                             controllers.UserController.setting(focus: String ?= "info")
POST    /user/setting                             controllers.UserController.doSetting
POST    /user/password                            controllers.UserController.doSetPassword
POST    /user/head                                controllers.UserController.doSetHeadImg()
GET     /user/find                                controllers.UserController.findUserList(searchTerm: String ?= "", limit: Int ?= 100)

GET     /todo                                     controllers.Default.todo

# API Routes
->  /api     api.Routes

# Demo Routes
->  /demo    demo.Routes

# Admin Routes
->  /admin   admin.Routes

# Resource
POST     /resource/owner/:ownerId                controllers.GridFSController.saveResource(ownerId: String)
GET      /resource/:rid                          controllers.GridFSController.getResource(rid: String, inline: String ?= "true")
DELETE   /resource/:rid                          controllers.GridFSController.removeResource(rid: String)
GET      /ueditor                                controllers.GridFSController.ueditorGet(action: String)
POST     /ueditor                                controllers.GridFSController.ueditorPost(action: String)

# Update
GET     /migrate/110To120                   controllers.MigrateController.migrateForm110To120

# Assets
GET     /baidu_verify_5vujE3CYCX.html             controllers.Assets.at(path="/public", file = "baidu_verify_5vujE3CYCX.html")
GET     /favicon.ico                              controllers.Assets.at(path="/public", file = "favicon.ico")
GET     /assets/*file                             controllers.Assets.versioned(path="/public", file: Asset)
